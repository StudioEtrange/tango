# All of these env var can be overriden by setting them in shell env

# Domain name
# NOTE : this is a regexp
TANGO_DOMAIN=.*


# a generated suffix added to all subdomain in the form <SUBDOMAIN><TANGO_SUBDOMAIN_SUFFIX_SEPARATOR><TANGO_SUBDOMAIN_SUFFIX>
# hash | random
# hash : will generate an unique suffix based on the machine
# random : will generate a random suffix string
TANGO_SUBDOMAIN_SUFFIX_MODE=

# a static suffix added to all subdomain in the form <SUBDOMAIN><TANGO_SUBDOMAIN_SUFFIX_SEPARATOR><TANGO_SUBDOMAIN_SUFFIX>, if not empty value
TANGO_SUBDOMAIN_SUFFIX=

# separator between SUBDOMAIN and TANGO_SUBDOMAIN_SUFFIX in the form <SUBDOMAIN><TANGO_SUBDOMAIN_SUFFIX_SEPARATOR><TANGO_SUBDOMAIN_SUFFIX>
TANGO_SUBDOMAIN_SUFFIX_SEPARATOR=-

# separator between SUBDOMAIN and TANGO_DOMAIN or between TANGO_SUBDOMAIN_SUFFIX and TANGO_DOMAIN
# complete form : <SUBDOMAIN>[<TANGO_SUBDOMAIN_SUFFIX_SEPARATOR><TANGO_SUBDOMAIN_SUFFIX>]<TANGO_SUBDOMAIN_SEPARATOR><TANGO_DOMAIN>
TANGO_SUBDOMAIN_SEPARATOR=.


TANGO_LOG_STATE=ON
TANGO_LOG_LEVEL=INFO

# Docker engines settings
# Docker engine endpoint used by traefik and any services who needs access to docker
# sample values : unix:///var/run/docker.sock OR tcp://ip:2375
DOCKER_ENGINE_ENDPOINT=unix:///var/run/docker.sock
# path to the docker socket file on host
DOCKER_ENGINE_SOCKET_PATH=/var/run/docker.sock
# mount socket path inside containers as a volume when we need it
# value ON or EMPTY if not needed
DOCKER_ENGINE_MOUNT_SOCKET=ON
DOCKER_ENGINE_MOUNT_SOCKET!={{DOCKER_ENGINE_SOCKET_PATH}}:{{DOCKER_ENGINE_SOCKET_PATH}}:rw
TRAEFIK_ADDITIONAL_VOLUMES+={{DOCKER_ENGINE_SOCKET_PATH}}:{{DOCKER_ENGINE_SOCKET_PATH}}:ro


# tango instance mode
# shared : central services like traefik exists only once and are shared between each tango instances
# isolated : central services like traefik are isolated for each current tango instance
# shared | isolated
TANGO_INSTANCE_MODE=isolated
TANGO_HOSTNAME=
# available services list. These services are active unless listed in TANGO_SERVICES_DISABLED (active services and active modules will be stored at runtime in TANGO_SERVICES_ACTIVE)
TANGO_SERVICES_AVAILABLE=
# disabled services list
TANGO_SERVICES_DISABLED=
# default available services list needed for tango internal, added to available service by default (TANGO_SERVICES_AVAILABLE) 
TANGO_SERVICES_DEFAULT=traefik vpn error
# active modules list by default
# format : <module>[@<network area>][%<service dependency1>][%<service dependency2>][~<vpn id>][^<nb instances>]
# a module actived on command line with --module <module> override the same module actived in this list
TANGO_SERVICES_MODULES=

# all services will depends on traefik
# ON | OFF
TANGO_SERVICES_DEPENDS_ON_TRAEFIK=ON
 
# Subservice declaration
# a sub service share with its parent a same traefik entrypoint by default (but can be override) and a same subdomain name 
# but different router rule (after hostname)
# subservice routers are listed in priority ascending order relative to each other
# each subservices priority is higher than the previous one which belong to the same parent service
# subservice name format must be : service_subservice
# active subservices will be stored in TANGO_SUBSERVICES_ROUTER_ACTIVE
TANGO_SUBSERVICES_ROUTER=
# default tango subservices 
TANGO_SUBSERVICES_ROUTER_DEFAULT=traefik_api traefik_api_rest

# Will mount these folders for each service which need to access these artefacts
# If list is defined these path must exists and can be relative to mambo root or absolute
# If list is not defined there will be no default value 
# They will be mounted in /$TANGO_ARTEFACT_MOUNT_POINT/FOLDER_NAME
# WARN : do not support folders with space name
# TANGO_ARTEFACT_FOLDERS=../mambo-media/MOVIES ../mambo-media/TV_SHOWS
TANGO_ARTEFACT_FOLDERS=
# services which needs to access in read/write mode these artefact folders - only parent services (equivalent to traefik routers) can be declared
TANGO_ARTEFACT_SERVICES=
# same with read only mode only
TANGO_ARTEFACT_SERVICES_READONLY=
TANGO_ARTEFACT_MOUNT_POINT=/artefact

# create named volumes. path is defined by a variable name
# format: <named volume>:<path|#variable path name>
TANGO_VOLUMES=

# TANGO_PATH_LIST : a list path to manage/create by tango
#   xxx_PATH                 path, if not empty, this path must exist
#   xxx_PATH_SUBPATH_LIST    list of subpath variables relative to xxx_PATH, these will be auto created
TANGO_PATH_LIST=CTX_DATA_PATH

# if CTX_DATA_PATH variable name is not listed into TANGO_PATH_LIST, it will be auto added
# CTX_DATA_PATH is at least used by some internal services need this folder like letsencrypt, traefik config for certificate or plugins data)
CTX_DATA_PATH?=data
# CTX_DATA_PATH if value is empty will be created under context workspace folder with 'ctx_data_path' as folder name

# list here subpaths relative to ctx data
CTX_DATA_PATH_SUBPATH_LIST=




# active plugins by default
# format : <plugin>[%<auto exec at launch into service1>][%!<manual exec into service2>][#arg1][#arg2]
TANGO_PLUGINS=

# unix user
# if no values are setted tango will compute curent unix user as default values
TANGO_USER_ID=
TANGO_GROUP_ID=

# generic image used for shell scripts
# (must contains bash and curl)
TANGO_SHELL_IMAGE=archlinux:20200505

# activate letsencrypt for certificate generation
# enable | disable | debug
LETS_ENCRYPT=disable
# Your identify to give to let's encrypt
LETS_ENCRYPT_MAIL=
# router service (and subservices listed in TANGO_SUBSERVICES) which will use lets encrypt support
LETS_ENCRYPT_SERVICES=
# default letsencrypt services
LETS_ENCRYPT_SERVICES_DEFAULT=traefik_api traefik_api_rest
# server used for debug purpose (to not reach letsencrypt API limit https://letsencrypt.org/fr/docs/rate-limits/)
LETS_ENCRYPT_SERVER_DEBUG=https://acme-staging-v02.api.letsencrypt.org/directory
# ACME challenge method
# HTTP (for HTTP-01) | DNS (for DNS-01)
ACME_CHALLENGE=HTTP
# providers list and matching env variables https://docs.traefik.io/https/acme/#providers
# dns provider
ACME_DNS_PROVIDER=

# specify a list of cert and key files
TANGO_CERT_FILES=
TANGO_KEY_FILES=

# service which will have mounted /etc/locatime and /etc/timezone for time settings
TANGO_TIME_VOLUME_SERVICES=
TANGO_TIME_VOLUME_SERVICES_DEFAULT=traefik service_info service_init
# service which will have TZ var setted for time settings
TANGO_TIME_VAR_TZ_SERVICES=
TANGO_TIME_VAR_TZ_SERVICES_DEFAULT=service_info service_init

# additional volume in compose file for each services
# format: <service_name>_ADDITIONAL_VOLUMES=<named volume|path|#variable path name>:<path|#variable path name>
# FOO_ADDITIONAL_VOLUMES=/tmp:/tmp

# additional eenvironment variable in compose file for each services
# NOTE in general case we add variable inside service just by using __add_declared_variable
# but those variables are shared by all services. If we want different values for each service of a variable we need to add them
# through compose env file
# <service_name>_ADDITIONAL_ENVVAR=<var=exp> <var=exp>
# FOO_ADDITIONAL_ENVVAR=A=1 B=2

# Attach existing traefik middlewares to a service
# <service_name>_ADDITIONAL_MIDDLEWARES=<middleware_name>[:<position>:[<position number>]]
# FOO_ADDITIONAL_MIDDLEWARES="middleware1 middleware2:FIRST middleware3:LAST middleware4:POS:4


# Network
# declare if services are exposed on internet (in opposition of : exposed only on local network area)
NETWORK_INTERNET_EXPOSED=1

# Define network areas
# Each network area have traefik entrypoint with a name, a protocol an internal port and an optional associated entrypoint
# The associated entrypoint have same name with postfix _secure is mainly used to declare an alternative HTTPS entrypoint to a HTTP entrypoint
#       format : name|protocol|internal_port|internal_secured_port
# The name of network area must be unique (If two differents protocols are needed behind same port, use different names. I.e area1|tcp|8000 area2|udp|8000)
NETWORK_SERVICES_AREA_LIST=

# At least one network area must be called 'main' (with any protocol/port definition)
# the 'main' network area will be the default one where services are attached
# the default definition of 'main' area which will be added if not present in NETWORK_SERVICES_AREA_LIST
NETWORK_SERVICES_AREA_MAIN_DEFAULT=main|http|80|443

# default network area to attach a service (not subservices) or module
NETWORK_SERVICES_AREA_DEFAULT=main
# services that will not be attached to any network area
NETWORK_SERVICES_AREA_DEFAULT_EXCLUDE=error vpn

# Services (not subservices) or a module attached to a network area
NETWORK_SERVICES_AREA_MAIN=

# Enable global HTTP to HTTPS redirection engine
# enable | disable
NETWORK_REDIRECT_HTTPS=enable
# list of services which will be redirected are in NETWORK_SERVICES_REDIRECT_HTTPS
# activate http to https redirection on these services or subservices
NETWORK_SERVICES_REDIRECT_HTTPS=
# default redirect http to https
NETWORK_SERVICES_REDIRECT_HTTPS_DEFAULT=traefik_api traefik_api_rest

# default value attributed to each traefik router
ROUTER_PRIORITY_DEFAULT_VALUE=2000
# default value attributed to the error router
ROUTER_PRIORITY_ERROR_VALUE=1800
# router priority which cath all request to be redirected to a secure entrypoint
ROUTER_PRIORITY_HTTP_TO_HTTPS_VALUE=1000
# a value to add or remove to router priority to higher or lower it
# (for implementation purpose : this value must be < ROUTER_PRIORITY_HTTP_TO_HTTPS_VALUE/2)
ROUTER_PRIORITY_DEFAULT_STEP=5

# See detail variable here : https://github.com/StudioEtrange/openvpn-client
# VPN definition
# VPN_1_PATH=/some/path
# VPN_1_VPN_FILES=foo.ovpn
# VPN_1_VPN_AUTH=username;password
# use DNS server of provider
# VPN_1_DNS=1
# services using vpn
# VPN_1_SERVICES=service1 service2
# VPN_1_CERT_AUTH=
# VPN_1_CIPHER=
# VPN_1_MSS=
# VPN_1_ROUTE=
# VPN_1_ROUTE6=



# Traefik version
# list versions : https://github.com/traefik/traefik/releases
TRAEFIK_VERSION=v2.9.6
# Direct access services
# open a port to access directly to the services without traefik nor organizr mainly for debug purposes
# no value stands for deactivate direct access
TRAEFIK_DIRECT_ACCESS_PORT=
TRAEFIK_API_USER=tango
TRAEFIK_API_PASSWORD=tango
# Traefik subdomain
TRAEFIK_SUBDOMAIN=traefik

# output traefik logs to files
# enable | disable
TRAEFIK_LOG_FILE=disable
TRAEFIK_ACCESSLOG_FILE=disable

# By default, the level is set to ERROR. Alternative logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
TRAEFIK_LOG_LEVEL=ERROR

# Change error page template
# see list in https://github.com/tarampampam/error-pages
TANGO_TEMPLATE_ERROR=ghost
